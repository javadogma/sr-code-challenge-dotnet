05/02/2021, 22:00
-----------------

Added project git

PS C:\projects\sr-code-challenge-dotnet> git init
Initialized empty Git repository in C:/Projects/sr-code-challenge-dotnet/.git/
PS C:\projects\sr-code-challenge-dotnet> git add .
PS C:\projects\sr-code-challenge-dotnet> git commit -m "Initial commit"
[master (root-commit) 7045772] Initial commit
 84 files changed, 43169 insertions(+)
 create mode 100644 .vs/code-challenge/DesignTimeBuild/.dtbcache.v2
 create mode 100644 .vs/code-challenge/config/applicationhost.config
 create mode 100644 .vs/code-challenge/v16/.suo
 create mode 100644 ReadMe.md
 create mode 100644 _config.yml
 create mode 100644 code-challenge.Tests/EmployeeControllerTests.cs
 create mode 100644 code-challenge.Tests/Extensions/HttpResponseMessageExtensions.cs
 create mode 100644 code-challenge.Tests/Helpers/JsonSerializer.cs
 create mode 100644 code-challenge.Tests/TestServerStartup.cs
 create mode 100644 code-challenge.Tests/bin/Debug/netcoreapp2.1/Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.dll
 create mode 100644 code-challenge.Tests/bin/Debug/netcoreapp2.1/Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Interface.dll
 create mode 100644 code-challenge.Tests/bin/Debug/netcoreapp2.1/Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.dll
 create mode 100644 code-challenge.Tests/bin/Debug/netcoreapp2.1/appsettings.Development.json
 create mode 100644 code-challenge.Tests/bin/Debug/netcoreapp2.1/appsettings.json
 create mode 100644 code-challenge.Tests/bin/Debug/netcoreapp2.1/code-challenge.Tests.Integration.deps.json
 create mode 100644 code-challenge.Tests/bin/Debug/netcoreapp2.1/code-challenge.Tests.Integration.dll
 create mode 100644 code-challenge.Tests/bin/Debug/netcoreapp2.1/code-challenge.Tests.Integration.pdb
 create mode 100644 code-challenge.Tests/bin/Debug/netcoreapp2.1/code-challenge.Tests.Integration.runtimeconfig.dev.json
 create mode 100644 code-challenge.Tests/bin/Debug/netcoreapp2.1/code-challenge.Tests.Integration.runtimeconfig.json
 create mode 100644 code-challenge.Tests/bin/Debug/netcoreapp2.1/code-challenge.dll
 create mode 100644 code-challenge.Tests/bin/Debug/netcoreapp2.1/code-challenge.pdb
 create mode 100644 code-challenge.Tests/bin/Debug/netcoreapp2.1/resources/EmployeeSeedData.json
 create mode 100644 code-challenge.Tests/code-challenge.Tests.Integration.csproj
 create mode 100644 code-challenge.Tests/obj/Debug/netcoreapp2.1/.NETCoreApp,Version=v2.1.AssemblyAttributes.cs
 create mode 100644 code-challenge.Tests/obj/Debug/netcoreapp2.1/code-challenge.Tests.Integration.AssemblyInfo.cs
 create mode 100644 code-challenge.Tests/obj/Debug/netcoreapp2.1/code-challenge.Tests.Integration.AssemblyInfoInputs.cache
 create mode 100644 code-challenge.Tests/obj/Debug/netcoreapp2.1/code-challenge.Tests.Integration.Program.cs
 create mode 100644 code-challenge.Tests/obj/Debug/netcoreapp2.1/code-challenge.Tests.Integration.assets.cache
 create mode 100644 code-challenge.Tests/obj/Debug/netcoreapp2.1/code-challenge.Tests.Integration.csproj.CopyComplete
 create mode 100644 code-challenge.Tests/obj/Debug/netcoreapp2.1/code-challenge.Tests.Integration.csproj.CoreCompileInputs.cache
 create mode 100644 code-challenge.Tests/obj/Debug/netcoreapp2.1/code-challenge.Tests.Integration.csproj.FileListAbsolute.txt
 create mode 100644 code-challenge.Tests/obj/Debug/netcoreapp2.1/code-challenge.Tests.Integration.csprojAssemblyReference.cache
 create mode 100644 code-challenge.Tests/obj/Debug/netcoreapp2.1/code-challenge.Tests.Integration.dll
 create mode 100644 code-challenge.Tests/obj/Debug/netcoreapp2.1/code-challenge.Tests.Integration.genruntimeconfig.cache
 create mode 100644 code-challenge.Tests/obj/Debug/netcoreapp2.1/code-challenge.Tests.Integration.pdb
 create mode 100644 code-challenge.Tests/obj/code-challenge.Tests.Integration.csproj.nuget.dgspec.json
 create mode 100644 code-challenge.Tests/obj/code-challenge.Tests.Integration.csproj.nuget.g.props
 create mode 100644 code-challenge.Tests/obj/code-challenge.Tests.Integration.csproj.nuget.g.targets
 create mode 100644 code-challenge.Tests/obj/project.assets.json
 create mode 100644 code-challenge.Tests/obj/project.nuget.cache
 create mode 100644 code-challenge.Tests/resources/EmployeeSeedData.json
 create mode 100644 code-challenge.sln
 create mode 100644 code-challenge/Controllers/EmployeeController.cs
 create mode 100644 code-challenge/Controllers/ReportingStructureController.cs
 create mode 100644 code-challenge/Data/EmployeeContext.cs
 create mode 100644 code-challenge/Data/EmployeeDataSeeder.cs
 create mode 100644 code-challenge/LICENSE
 create mode 100644 code-challenge/Models/Employee.cs
 create mode 100644 code-challenge/Models/ReportingStructure.cs
 create mode 100644 code-challenge/Program.cs
 create mode 100644 code-challenge/Properties/launchSettings.json
 create mode 100644 code-challenge/Repositories/EmployeeRespository.cs
 create mode 100644 code-challenge/Repositories/IEmployeeRepository.cs
 create mode 100644 code-challenge/Services/EmployeeService.cs
 create mode 100644 code-challenge/Services/IEmployeeService.cs
 create mode 100644 code-challenge/bin/Debug/netcoreapp2.1/code-challenge.deps.json
 create mode 100644 code-challenge/bin/Debug/netcoreapp2.1/code-challenge.dll
 create mode 100644 code-challenge/bin/Debug/netcoreapp2.1/code-challenge.pdb
 create mode 100644 code-challenge/bin/Debug/netcoreapp2.1/code-challenge.runtimeconfig.dev.json
 create mode 100644 code-challenge/bin/Debug/netcoreapp2.1/code-challenge.runtimeconfig.json
 create mode 100644 code-challenge/bin/Debug/netcoreapp2.1/resources/EmployeeSeedData.json
 create mode 100644 code-challenge/code-challenge.csproj
 create mode 100644 code-challenge/code-challenge.csproj.user
 create mode 100644 code-challenge/obj/Debug/netcoreapp2.1/.NETCoreApp,Version=v2.1.AssemblyAttributes.cs
 create mode 100644 code-challenge/obj/Debug/netcoreapp2.1/code-challenge.AssemblyInfo.cs
 create mode 100644 code-challenge/obj/Debug/netcoreapp2.1/code-challenge.AssemblyInfoInputs.cache
 create mode 100644 code-challenge/obj/Debug/netcoreapp2.1/code-challenge.csproj.CoreCompileInputs.cache
 create mode 100644 code-challenge/obj/Debug/netcoreapp2.1/code-challenge.csproj.FileListAbsolute.txt
 create mode 100644 code-challenge/obj/Debug/netcoreapp2.1/code-challenge.csprojAssemblyReference.cache
 create mode 100644 code-challenge/obj/Debug/netcoreapp2.1/code-challenge.dll
 create mode 100644 code-challenge/obj/Debug/netcoreapp2.1/code-challenge.genruntimeconfig.cache
 create mode 100644 code-challenge/obj/Debug/netcoreapp2.1/code-challenge.pdb
 create mode 100644 code-challenge/obj/code-challenge.csproj.nuget.dgspec.json                                           create mode 100644 code-challenge/obj/code-challenge.csproj.nuget.g.props                                               create mode 100644 code-challenge/obj/code-challenge.csproj.nuget.g.targets                                             create mode 100644 code-challenge/obj/project.assets.json                                                               create mode 100644 code-challenge/obj/project.nuget.cache
 create mode 100644 code-challenge/resources/EmployeeSeedData.json
PS C:\projects\sr-code-challenge-dotnet> git tag 0.1.0
PS C:\projects\sr-code-challenge-dotnet> git remote add origin https://github.com/javadogma/sr-code-challenge-dotnet.git

PS C:\projects\sr-code-challenge-dotnet> git branch -M main
PS C:\projects\sr-code-challenge-dotnet> git push -u origin main
info: please complete authentication in your browser...
Enumerating objects: 101, done.
Counting objects: 100% (101/101), done.
Delta compression using up to 12 threads
Compressing objects: 100% (81/81), done.
Writing objects: 100% (101/101), 310.94 KiB | 2.80 MiB/s, done.
Total 101 (delta 21), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (21/21), done.
To https://github.com/javadogma/sr-code-challenge-dotnet.git
 * [new branch]      main -> main
Branch 'main' set up to track remote branch 'main' from 'origin'.

05/02/2021, 22:19
Use Curl to hit the end employee endpoint with one of the employee ids.

PS C:\projects\sr-code-challenge-dotnet> curl

cmdlet Invoke-WebRequest at command pipeline position 1
Supply values for the following parameters:
Uri: http://localhost:8080/api/employee/16a596ae-edd3-4847-99fe-c4518e82c86f


StatusCode        : 200
StatusDescription : OK
Content           : {"employeeId":"16a596ae-edd3-4847-99fe-c4518e82c86f","firstName":"John","lastName":"Lennon","positi
                    on":"Development Manager","department":"Engineering","directReports":null}
RawContent        : HTTP/1.1 200 OK
                    Transfer-Encoding: chunked
                    Content-Type: application/json; charset=utf-8
                    Date: Mon, 03 May 2021 02:18:56 GMT
                    Server: Kestrel
                    X-Powered-By: ASP.NET

                    {"employeeId":"16a596ae-edd3-...
Forms             : {}
Headers           : {[Transfer-Encoding, chunked], [Content-Type, application/json; charset=utf-8], [Date, Mon, 03 May
                    2021 02:18:56 GMT], [Server, Kestrel]...}
Images            : {}
InputFields       : {}
Links             : {}
ParsedHtml        : mshtml.HTMLDocumentClass
RawContentLength  : 173



PS C:\projects\sr-code-challenge-dotnet>

Friday March 4, 2022
--------------------
I downloaded the challenge and got off in the weeds thinking it was broken out of the box because /api/employee returned a 404. 
Went to put it in Git and found that I already had this project in Git from May 2021.
I pulled that and it had the same behavior.

I played with this for a couple of days getting off into the weeds:

https://devblogs.microsoft.com/dotnet/debugging-asp-net-web-api-with-route-debugger/
https://dotnettutorials.net/lesson/asp-net-core-launchsettings-json-file/

10:32 PM Wednesday, March 9, 2022
---------------------------------
Decided to push whatever changes I had to git
Found this file.
Clues from the past work got me back on track.
The web service does in fact work so let's try the other employee IDs.


PS C:\Users\javad> curl.exe http://localhost:8080/api/employee/b7839309-3348-463b-a7e3-5de1c168beb3
{"employeeId":"b7839309-3348-463b-a7e3-5de1c168beb3","firstName":"Paul","lastName":"McCartney","position":"Developer I","department":"Engineering","directReports":null}
PS C:\Users\javad>
PS C:\Users\javad>
PS C:\Users\javad>
PS C:\Users\javad> curl.exe http://localhost:8080/api/employee/03aa1462-ffa9-4978-901b-7c001562cf6f
{"employeeId":"03aa1462-ffa9-4978-901b-7c001562cf6f","firstName":"Ringo","lastName":"Starr","position":"Developer V","department":"Engineering","directReports":null}
PS C:\Users\javad>
PS C:\Users\javad>
PS C:\Users\javad>
PS C:\Users\javad> curl.exe http://localhost:8080/api/employee/62c1084e-6e34-4630-93fd-9153afb65309
{"employeeId":"62c1084e-6e34-4630-93fd-9153afb65309","firstName":"Pete","lastName":"Best","position":"Developer II","department":"Engineering","directReports":null}
PS C:\Users\javad>
PS C:\Users\javad>
PS C:\Users\javad>
PS C:\Users\javad> curl.exe http://localhost:8080/api/employee/c0c2293d-16bd-4603-8e08-638a9d18b22c
{"employeeId":"c0c2293d-16bd-4603-8e08-638a9d18b22c","firstName":"George","lastName":"Harrison","position":"Developer III","department":"Engineering","directReports":null}
PS C:\Users\javad>
PS C:\Users\javad>
PS C:\Users\javad>
PS C:\Users\javad>

Good. The main APIs seem to be working.
For now, until anything unexpected happens, lets move ahead with the new functionality.


11:38 PM Wednesday, March 9, 2022
---------------------------------

Used postman to add a new employee. Even though the instructions state that the POST takes an employee and returns an employee, the employee ID is created as a result of the add so passing one in doesn't seem to matter.

PS C:\Users\javad> curl.exe http://localhost:8080/api/employee/06b822a3-ee60-4ee8-a91a-4547b1800678
{"employeeId":"06b822a3-ee60-4ee8-a91a-4547b1800678","firstName":"Nick","lastName":"Bartolotti","position":"Developer I","department":"Engineering","directReports":null}
PS C:\Users\javad>


Since this is an in-memory database this record will be gone the next time around.


7:12 PM Thursday, March 10, 2022
--------------------------------

Tonight the goal is to set up the database again and ensure the update (PUT) method is working.
Switched to using cURL instead of Postman.

// Add the new record
C:\Projects\sr-code-challenge-dotnet>curl --location --request POST "http://localhost:8080/api/employee/" --header "Content-Type:application/json" --data-raw "{\"firstName\":\"Nick\",\"lastName\":\"Bartolotti\",\"position\":\"Developer I\",\"department\":\"Engineering\",\"directReports\":null}"

// response
{"employeeId":"2224d373-f9f4-4e02-802e-6f07dfb0cd1b","firstName":"Nick","lastName":"Bartolotti","position":"Developer I","department":"Engineering","directReports":null}
C:\Projects\sr-code-challenge-dotnet>
C:\Projects\sr-code-challenge-dotnet>
C:\Projects\sr-code-challenge-dotnet>

// check the specific user id
C:\Projects\sr-code-challenge-dotnet>curl.exe http://localhost:8080/api/employee/2224d373-f9f4-4e02-802e-6f07dfb0cd1b

// response
{"employeeId":"2224d373-f9f4-4e02-802e-6f07dfb0cd1b","firstName":"Nick","lastName":"Bartolotti","position":"Developer I","department":"Engineering","directReports":null}
C:\Projects\sr-code-challenge-dotnet>
C:\Projects\sr-code-challenge-dotnet>
C:\Projects\sr-code-challenge-dotnet>

// update the record to the music department
C:\Projects\sr-code-challenge-dotnet>curl --location --request PUT "http://localhost:8080/api/employee/2224d373-f9f4-4e02-802e-6f07dfb0cd1b" --header "Content-Type: application/json" --data-raw "{\"firstName\":\"Nick\",\"lastName\":\"Bartolotti\",\"position\":\"Developer I\",\"department\":\"Music\",\"directReports\":null}"

// response
{"employeeId":"2224d373-f9f4-4e02-802e-6f07dfb0cd1b","firstName":"Nick","lastName":"Bartolotti","position":"Developer I","department":"Music","directReports":null}
C:\Projects\sr-code-challenge-dotnet>
C:\Projects\sr-code-challenge-dotnet>
C:\Projects\sr-code-challenge-dotnet>
z
// for shits and giggles query the employee 
C:\Projects\sr-code-challenge-dotnet>curl.exe http://localhost:8080/api/employee/2224d373-f9f4-4e02-802e-6f07dfb0cd1b

// response
{"employeeId":"2224d373-f9f4-4e02-802e-6f07dfb0cd1b","firstName":"Nick","lastName":"Bartolotti","position":"Developer I","department":"Music","directReports":null}
C:\Projects\sr-code-challenge-dotnet>

7:59 PM Thursday, March 10, 2022
--------------------------------

OK that all seems to work. 

Moving on to the next step, I started to create the ReportingStructure but as it turns out I already added this back in May.

10:21 PM Thursday, March 10, 2022
---------------------------------

Running new code this is what we see:

// hitting the /api/employee/reports/{id} api we get a ReportingStructure that contains an employee and a count. The number of reports is harde coded for now while the skeleton is put in place.
C:\Projects\sr-code-challenge-dotnet>curl.exe http://localhost:8080/api/employee/reports/b7839309-3348-463b-a7e3-5de1c168beb3
{"employee":{"employeeId":"b7839309-3348-463b-a7e3-5de1c168beb3","firstName":"Paul","lastName":"McCartney","position":"Developer I","department":"Engineering","directReports":null},"numberOfReports":277}

// hitting the /api/employee/{id} api we get an employee with no direct reports. This may not be the best implementation because now the Employee has a field that's not really being used for anything useful yet still comes along for the ride with every instance of Employee. It's a bit wasteful.
C:\Projects\sr-code-challenge-dotnet>curl.exe http://localhost:8080/api/employee/b7839309-3348-463b-a7e3-5de1c168beb3
{"employeeId":"b7839309-3348-463b-a7e3-5de1c168beb3","firstName":"Paul","lastName":"McCartney","position":"Developer I","department":"Engineering","directReports":null}

For now there's a new controller that responds to the /reports endpoint and executes code to "calculate" the number of direct reports.


9:17 PM Friday, March 11, 2022
------------------------------

Added code to count the direct reports

curl.exe http://localhost:8080/api/employee/reports/16a596ae-edd3-4847-99fe-c4518e82c86f

Caused an exception.

System.NullReferenceException: Object reference not set to an instance of an object.
   at challenge.Models.Employee.CountReports() in C:\Projects\sr-code-challenge-dotnet\code-challenge\Models\Employee.cs:line 31
   at challenge.Models.Employee.GetReportingStructure() in C:\Projects\sr-code-challenge-dotnet\code-challenge\Models\Employee.cs:line 22
   at challenge.Services.EmployeeService.GetDirectReports(String id) in C:\Projects\sr-code-challenge-dotnet\code-challenge\Services\EmployeeService.cs:line 70
   at challenge.Controllers.EmployeeController.GetNumberOfReports(String id) in C:\Projects\sr-code-challenge-dotnet\code-challenge\Controllers\EmployeeController.cs:line 52
   at lambda_method(Closure , Object , Object[] )
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)

11:28 PM Friday, March 11, 2022
-------------------------------

Stepping through the debugger sometimes causes the exception. I think it's related to viewing the content of the _employeeContext from the debugger. When the instance is viewed the code doesn't except. When it's not viewed the code throws an exception. Could also be just how fast the code runs which implies concurrency or something like that.

This is the output from the code (correctly calculating the count) for John Lennon but it doesn't shit itself because it was run through the debugger.

C:\Projects\sr-code-challenge-dotnet>curl.exe http://localhost:8080/api/employee/reports/16a596ae-edd3-4847-99fe-c4518e82c86f
{"employee":{"employeeId":"16a596ae-edd3-4847-99fe-c4518e82c86f","firstName":"John","lastName":"Lennon","position":"Development Manager","department":"Engineering","directReports":[{"employeeId":"b7839309-3348-463b-a7e3-5de1c168beb3","firstName":"Paul","lastName":"McCartney","position":"Developer I","department":"Engineering","directReports":null},{"employeeId":"03aa1462-ffa9-4978-901b-7c001562cf6f","firstName":"Ringo","lastName":"Starr","position":"Developer V","department":"Engineering","directReports":[{"employeeId":"62c1084e-6e34-4630-93fd-9153afb65309","firstName":"Pete","lastName":"Best","position":"Developer II","department":"Engineering","directReports":null},{"employeeId":"c0c2293d-16bd-4603-8e08-638a9d18b22c","firstName":"George","lastName":"Harrison","position":"Developer III","department":"Engineering","directReports":null}]}]},"numberOfReports":4}
C:\Projects\sr-code-challenge-dotnet>

Hypothesis is something wrong with the entity framework with respect to retreiving the employee.

TODO: Run the test slowly through the debugger for Ringo and ensure the count is correct.
TODO: Dig into the entity framework problem.
TODO: Research the exception stack.
Considerations: concurrency, incorrect setup, something else ??


1:24 PM Saturday, March 12, 2022
--------------------------------

Ran the unit tests for the project today to see what's there. Write a test for the new controller and see what information can be discovered.

5:31 PM Sunday, March 13, 2022
------------------------------

Implemented a unit test for NumberOfReports and it fails as expected. 

Here's a source for for testing and debugging entity frameworks.

https://docs.microsoft.com/en-us/aspnet/web-api/overview/testing-and-debugging/mocking-entity-framework-when-unit-testing-aspnet-web-api-2


+		&_employeeContext	0x000001e1802fd970	System.IntPtr*
+		&employeeContext	0x00000080256bd410	System.IntPtr*

+		&_employeeContext	0x000001e1802fd970	System.IntPtr*

https://bitiniyan.com/2019/02/02/how-to-write-unit-tests-with-entity-framework-core/

https://docs.microsoft.com/en-us/ef/core/get-started/overview/first-app?tabs=netcore-cli



9:54 PM Thursday, March 17, 2022
--------------------------------

Create a new type, Compensation. A Compensation has the following fields: employee, salary, and effectiveDate. Create two new Compensation REST endpoints. One to create and one to read by employeeId. These should persist and query the Compensation from the persistence layer.

So, I'm not sure why a Compensation object would have an employee, salary, and effective date. Seems like salary and effective date are properties of an employee. But -- I can see if compensation was another table in a database that it may be useful to keep this information separate from the employee data and use the employee id as the PK for indexing into that table to find the date and salary. IDK.

9:01 PM Saturday, March 19, 2022
--------------------------------

Pass the compensation value and the effective date in a POST body. Had to cheese it a little with the CompensationInput model. I think this can be better designed with a bit more thought. Once the controller is in and the Compensation can be set, I'll take another look and see where it can improve.

Back of the napkin guess at this point is the intent is something like this:

1. Get an employee
2. Get the id of the employee from the response
3. Get the compensation for the employee
4. Set the compensation for the employee

Seems a bit messy since the compensation contains an employee. Might have been better if the compensation object returned the employee ID instead of the employee. This would allow the caller to ask for an employee, get the ID, request the compensation with the ID, and have the compensation return with the ID, value, and effective date.

6:08 PM Sunday, March 20, 2022
------------------------------

WIP for the compensation contoller. Moved the id to the query parameters instead of the request body because I think this follows the API convention better.

Found an intersting clue during debugging. The debugger caught an instance where a new thread was used to handle succesive GET requests. This manifested itself in the EmployeeRepository so I think this supports the idea that there is concurrency issue (well, not really concurrency) but unexpected behavior with respect to the EF when requests come in on different threads. See clue.png.

9:41 PM Sunday, March 20, 2022
------------------------------

Fixed up the compensation feature. TODO: tests for compensation.

9:58 PM Sunday, March 20, 2022
------------------------------

https://stackoverflow.com/questions/32411148/entity-framework-dbcontext-and-thread-safety
https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/statements/lock

10:09 PM Monday, March 21, 2022
-------------------------------

This one looks promissing
https://docs.microsoft.com/en-us/ef/core/dbcontext-configuration/

Coule be the problem is in the way the employee repository is being used with DI in relation to how the DbContext is being used. The EmployeeContext needs to be injected into the controllers' constructors so the DbContext is scoped to that instance of the controller. The way the code is written the EmployeeRepositry is injected into the controller. The EmployeeRepository is added to the services as a Scoped service meaning it should be created for every call on the controller. The question is, is the DbContext that it has injected is also created per scope or is the EmployeeRepositry somehow haning around. They should be disposed of by the servuce provider. 


 



